name: CI/CD for Cardio API V2

on:
  push:
    paths:
      - 'app_v2.py'
      - 'modelv2.joblib'
      - 'modelv2_threshold.txt'
      - 'modelv2_features.joblib'
      - 'Dockerfile'
      - 'requirements.txt'

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest test.py

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin 098578355748.dkr.ecr.us-east-1.amazonaws.com

      - name: Build, tag, and push Docker image (Model V2)
        run: |
          docker build --platform=linux/amd64 -t cardio-api:v2 -f Dockerfile .
          docker tag cardio-api:v2 098578355748.dkr.ecr.us-east-1.amazonaws.com/cardio-api1:v2
          docker push 098578355748.dkr.ecr.us-east-1.amazonaws.com/cardio-api1:v2

      - name: SSH into EC2 and deploy Model V2 container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}

            aws ecr get-login-password --region us-east-1 | \
              docker login --username AWS --password-stdin 098578355748.dkr.ecr.us-east-1.amazonaws.com

            if [ "$(docker ps -aq -f name=cardio-api-v2)" ]; then
              echo "Stopping and removing existing cardio-api-v2 container..."
              docker stop cardio-api-v2
              docker rm cardio-api-v2
            fi

            docker pull 098578355748.dkr.ecr.us-east-1.amazonaws.com/cardio-api1:v2
            docker run -d -p 8001:8000 --name cardio-api-v2 098578355748.dkr.ecr.us-east-1.amazonaws.com/cardio-api1:v2
